.PHONY: docker

GOCACHE := $(shell go env GOCACHE)

## Build the production Docker image.
docker/build: docker/volume/create generate
	docker build \
	--tag ${REALWORLD_IMAGE_NAME} \
	--build-arg PORT=${REALWORLD_PORT} \
	--build-arg DATA_DIR=${REALWORLD_DATA_DIR} \
	--build-arg GOCACHE=$(GOCACHE) \
	.

## Build and run the Docker image in the background.
docker/run: docker/build
	docker run \
	--rm \
	--name=${REALWORLD_CONTAINER_NAME} \
	--env-file env/runtime.env \
	--env-file env/common.env \
	--publish ${REALWORLD_PORT}:${REALWORLD_PORT} \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=${REALWORLD_DATA_DIR} \
	--user ${REALWORLD_USER}:${REALWORLD_USER} \
	${REALWORLD_IMAGE_NAME}

## Build and run the Docker image interactively.
docker/run/it: docker/build
	docker run \
	--interactive \
	--tty \
	--rm \
	--name=${REALWORLD_CONTAINER_NAME} \
	--env-file env/runtime.env \
	--env-file env/common.env \
	--publish ${REALWORLD_PORT}:${REALWORLD_PORT} \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=${REALWORLD_DATA_DIR} \
	--user ${REALWORLD_USER}:${REALWORLD_USER} \
	${REALWORLD_IMAGE_NAME}

## Run a helper container with the Realworld data volume mounted.
docker/volume/manage: docker/volume/create
	docker run \
	--interactive \
	--tty \
	--rm \
	--workdir /tmp/vol \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=/tmp/vol \
	busybox \
	sh

docker/volume/create:
	scripts/create_volume_if_not_exists.sh