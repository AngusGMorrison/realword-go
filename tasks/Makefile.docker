.PHONY: docker

## Build the production Docker image.
docker/build: docker/volume/create
	docker build \
	--no-cache \
	--tag ${REALWORLD_IMAGE_NAME} \
	--build-arg PORT=${REALWORLD_PORT} \
	--build-arg DATA_DIR=${REALWORLD_DATA_DIR} \
	.

docker/volume/create:
	scripts/create_volume_if_not_exists.sh


## Build and run the Docker image in the background.
docker/run: docker/volume/create
	docker run \
	--rm \
	--name=${REALWORLD_CONTAINER_NAME} \
	--env-file env/runtime.env \
	--env-file env/common.env \
	--publish ${REALWORLD_PORT}:${REALWORLD_PORT} \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=${REALWORLD_DATA_DIR} \
	--user ${REALWORLD_USER}:${REALWORLD_USER} \
	${REALWORLD_IMAGE_NAME}

## Build and run the Docker image interactively.
docker/run/it: docker/volume/create
	docker run \
	--interactive \
	--tty \
	--rm \
	--name=${REALWORLD_CONTAINER_NAME} \
	--env-file env/runtime.env \
	--env-file env/common.env \
	--publish ${REALWORLD_PORT}:${REALWORLD_PORT} \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=${REALWORLD_DATA_DIR} \
	--user ${REALWORLD_USER}:${REALWORLD_USER} \
	${REALWORLD_IMAGE_NAME}

## Run the app in a container with live reloading.
docker/dev: docker/volume/create
	docker run \
	--interactive \
	--tty \
	--rm \
	--workdir /app \
	--env air_wd=/app \
	--env-file env/runtime.env \
	--env-file env/common.env \
	--mount type=bind,src=$(shell pwd),dst=/app \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=${REALWORLD_DATA_DIR} \
	--publish ${REALWORLD_PORT}:${REALWORLD_PORT} \
	--entrypoint scripts/init_air.sh \
	cosmtrek/air \
	-c /app/.air.toml

## List the files inside the Realworld data volume.
docker/volume/ls: docker/volume/create
	docker run \
	--interactive \
	--tty \
	--rm \
	--mount type=volume,src=${REALWORLD_VOLUME_NAME},dst=/tmp/vol \
	--user ${REALWORLD_USER}:${REALWORLD_USER} \
	busybox \
	ls -la /tmp